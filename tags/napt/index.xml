<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Napt on stsnブログ</title>
    <link>https://satoshun.github.io/tags/napt/</link>
    <description>Recent content in Napt on stsnブログ</description>
    <generator>Hugo</generator>
    <language>ja</language>
    <copyright>Sato Shun</copyright>
    <lastBuildDate>Sun, 04 Dec 2022 09:40:27 +0000</lastBuildDate>
    <atom:link href="https://satoshun.github.io/tags/napt/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>naptを使って、ビルドを高速化する</title>
      <link>https://satoshun.github.io/2022/12/napt-build-performance/</link>
      <pubDate>Sun, 04 Dec 2022 09:40:27 +0000</pubDate>
      <guid>https://satoshun.github.io/2022/12/napt-build-performance/</guid>
      <description>&lt;p&gt;kaptの代替ライブラリの&lt;a href=&#34;https://github.com/sergei-lapin/napt&#34;&gt;napt&lt;/a&gt;がDagger hiltに対応したので、弊アプリでどれくらいビルド速度が上がるかを簡単に検証しました。&#xA;naptについて簡単に説明すると、ビルドを高速化するけど、機能が制限されているkaptっていう感じです。&lt;/p&gt;&#xA;&lt;p&gt;実際に、&lt;code&gt;assembleDebug --rerun-tasks&lt;/code&gt;コマンドを10回程度実行してそれぞれ比較してみました。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-code&#34; data-lang=&#34;code&#34;&gt;// Before&#xA;2m 6s&#xA;2m 46s&#xA;2m 4s&#xA;2m 47s&#xA;2m 20s&#xA;2m 47s&#xA;2m 3s&#xA;2m 46s&#xA;2m 5s&#xA;2m 14s&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-code&#34; data-lang=&#34;code&#34;&gt;// After&#xA;1m 48s&#xA;1m 46s&#xA;1m 48s&#xA;1m 49s&#xA;1m 46s&#xA;2m 2s&#xA;2m 29s&#xA;1m 51s&#xA;1m 46s&#xA;1m 48s&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ややビルドが早くなりました。それなりに大規模なプロジェクトの場合には、導入を検討してみるのも良さそうです。&lt;/p&gt;&#xA;&lt;h2 id=&#34;補足&#34;&gt;補足&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;弊アプリの場合には一部napt置き換えが出来なかったので、kaptを使っている箇所があります&lt;/li&gt;&#xA;&lt;li&gt;まだ、本番にリリースなどしていないので、実際には何か問題がある可能性があります&lt;/li&gt;&#xA;&lt;li&gt;kaptに比べると、一部機能落ちしているのでそこには注意が必要です&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
  </channel>
</rss>
