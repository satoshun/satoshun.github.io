<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dalvik on stsnブログ</title>
    <link>https://satoshun.github.io/tags/dalvik/</link>
    <description>Recent content in Dalvik on stsnブログ</description>
    <generator>Hugo</generator>
    <language>ja</language>
    <copyright>Sato Shun</copyright>
    <lastBuildDate>Sat, 05 Jan 2019 02:15:50 +0000</lastBuildDate>
    <atom:link href="https://satoshun.github.io/tags/dalvik/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>dexdumpメモ</title>
      <link>https://satoshun.github.io/2019/01/reading_dexdump_result/</link>
      <pubDate>Sat, 05 Jan 2019 02:15:50 +0000</pubDate>
      <guid>https://satoshun.github.io/2019/01/reading_dexdump_result/</guid>
      <description>&lt;p&gt;Android build-toolsにはdexdumpというdexファイルを逆アセンブルするツールがあります。&#xA;逆アセンブルしたファイルを読みたかったのでそれのメモです。&lt;/p&gt;&#xA;&lt;p&gt;内容はまとまっていません。自分用のメモレベルの記事になります。&lt;/p&gt;&#xA;&lt;p&gt;dexファイルをコマンドから作るにはjavacとd8コマンドを使います。d8コマンドは &lt;a href=&#34;https://r8.googlesource.com/r8&#34;&gt;https://r8.googlesource.com/r8&lt;/a&gt; の手順通りにビルドします。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;javac *.java // or kotlinc *.kt&#xA;java -jar $R8_HOME/build/libs/d8.jar --lib $ANDROID_HOME/platforms/android-28/android.jar --release *.class&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;d8コマンドで出来たdexファイルをdexdumpで逆アセンブルします。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ANDROID_HOME/build-tools/28.0.3/dexdump -d classes.dex&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;例えば次のJavaコードを逆アセンブルしてみます。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Test&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        show(1, 10.&lt;span style=&#34;color:#a6e22e&#34;&gt;0&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        String&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; array &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        toggle(array);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        fade();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        drag();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        hide();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        click();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        hover();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; String &lt;span style=&#34;color:#a6e22e&#34;&gt;show&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; a, &lt;span style=&#34;color:#66d9ef&#34;&gt;double&lt;/span&gt; d) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        System.&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;(a);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;showed&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;toggle&lt;/span&gt;(String&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; args) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        System.&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;toggle&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;protected&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fade&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        System.&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fade&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;final&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;protected&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;drag&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        System.&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;drag&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;hide&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        System.&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hide&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;click&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        System.&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;click&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;hover&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        System.&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hover&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Processing &amp;#39;classes.dex&amp;#39;...&#xA;Opened &amp;#39;classes.dex&amp;#39;, DEX version &amp;#39;035&amp;#39;&#xA;Class #0            -&#xA;  Class descriptor  : &amp;#39;LTest;&amp;#39; // クラス名Test&#xA;  Access flags      : 0x0000 () // パッケージプライベート&#xA;  Superclass        : &amp;#39;Ljava/lang/Object;&amp;#39; // スーパークラスがObject&#xA;  Interfaces        - // インターフェースを持たない&#xA;  Static fields     - // Staticフィールドを持たない&#xA;  Instance fields   - // インスタンスフィールドを持たない&#xA;  Direct methods    -&#xA;    #0              : (in LTest;)&#xA;      name          : &amp;#39;&amp;lt;init&amp;gt;&amp;#39; // コンストラクタを示す&#xA;      type          : &amp;#39;()V&amp;#39; // 引数なし/戻り値なし&#xA;      access        : 0x10000 (CONSTRUCTOR)&#xA;      code          -&#xA;      registers     : 1&#xA;      ins           : 1&#xA;      outs          : 1&#xA;      insns size    : 4 16-bit code units&#xA;0001e4:                                        |[0001e4] Test.&amp;lt;init&amp;gt;:()V&#xA;0001f4: 7010 0b00 0000                         |0000: invoke-direct {v0}, Ljava/lang/Object;.&amp;lt;init&amp;gt;:()V // method@000b // Objectのsuper&#xA;0001fa: 0e00                                   |0003: return-void&#xA;      catches       : (none)&#xA;      positions     :&#xA;        0x0000 line=1&#xA;      locals        :&#xA;        0x0000 - 0x0004 reg=0 this LTest;&#xA;&#xA;    #1              : (in LTest;)&#xA;      name          : &amp;#39;click&amp;#39;&#xA;      type          : &amp;#39;()V&amp;#39;&#xA;      access        : 0x0009 (PUBLIC STATIC)&#xA;      code          -&#xA;      registers     : 2&#xA;      ins           : 0&#xA;      outs          : 2&#xA;      insns size    : 8 16-bit code units&#xA;0001fc:                                        |[0001fc] Test.click:()V&#xA;00020c: 6200 0000                              |0000: sget-object v0, Ljava/lang/System;.out:Ljava/io/PrintStream; // field@0000&#xA;000210: 1a01 0f00                              |0002: const-string v1, &amp;#34;click&amp;#34; // string@000f&#xA;000214: 6e20 0a00 1000                         |0004: invoke-virtual {v0, v1}, Ljava/io/PrintStream;.println:(Ljava/lang/String;)V // method@000a&#xA;00021a: 0e00                                   |0007: return-void&#xA;      catches       : (none)&#xA;      positions     :&#xA;        0x0000 line=35&#xA;      locals        :&#xA;&#xA;    #2              : (in LTest;)&#xA;      name          : &amp;#39;hide&amp;#39;&#xA;      type          : &amp;#39;()V&amp;#39;&#xA;      access        : 0x0002 (PRIVATE)&#xA;      code          -&#xA;      registers     : 3&#xA;      ins           : 1&#xA;      outs          : 2&#xA;      insns size    : 8 16-bit code units&#xA;00025c:                                        |[00025c] Test.hide:()V&#xA;00026c: 6200 0000                              |0000: sget-object v0, Ljava/lang/System;.out:Ljava/io/PrintStream; // field@0000&#xA;000270: 1a01 1200                              |0002: const-string v1, &amp;#34;hide&amp;#34; // string@0012&#xA;000274: 6e20 0a00 1000                         |0004: invoke-virtual {v0, v1}, Ljava/io/PrintStream;.println:(Ljava/lang/String;)V // method@000a&#xA;00027a: 0e00                                   |0007: return-void&#xA;      catches       : (none)&#xA;      positions     :&#xA;        0x0000 line=31&#xA;      locals        :&#xA;        0x0000 - 0x0008 reg=2 this LTest;&#xA;&#xA;    #3              : (in LTest;)&#xA;      name          : &amp;#39;hover&amp;#39;&#xA;      type          : &amp;#39;()V&amp;#39;&#xA;      access        : 0x0008 (STATIC)&#xA;      code          -&#xA;      registers     : 2&#xA;      ins           : 0&#xA;      outs          : 2&#xA;      insns size    : 8 16-bit code units&#xA;00027c:                                        |[00027c] Test.hover:()V&#xA;00028c: 6200 0000                              |0000: sget-object v0, Ljava/lang/System;.out:Ljava/io/PrintStream; // field@0000&#xA;000290: 1a01 1300                              |0002: const-string v1, &amp;#34;hover&amp;#34; // string@0013&#xA;000294: 6e20 0a00 1000                         |0004: invoke-virtual {v0, v1}, Ljava/io/PrintStream;.println:(Ljava/lang/String;)V // method@000a&#xA;00029a: 0e00                                   |0007: return-void&#xA;      catches       : (none)&#xA;      positions     :&#xA;        0x0000 line=39&#xA;      locals        :&#xA;&#xA;  Virtual methods   -&#xA;    #0              : (in LTest;)&#xA;      name          : &amp;#39;drag&amp;#39;&#xA;      type          : &amp;#39;()V&amp;#39;&#xA;      access        : 0x0014 (PROTECTED FINAL)&#xA;      code          -&#xA;      registers     : 3&#xA;      ins           : 1&#xA;      outs          : 2&#xA;      insns size    : 8 16-bit code units&#xA;00021c:                                        |[00021c] Test.drag:()V&#xA;00022c: 6200 0000                              |0000: sget-object v0, Ljava/lang/System;.out:Ljava/io/PrintStream; // field@0000&#xA;000230: 1a01 1000                              |0002: const-string v1, &amp;#34;drag&amp;#34; // string@0010&#xA;000234: 6e20 0a00 1000                         |0004: invoke-virtual {v0, v1}, Ljava/io/PrintStream;.println:(Ljava/lang/String;)V // method@000a&#xA;00023a: 0e00                                   |0007: return-void&#xA;      catches       : (none)&#xA;      positions     :&#xA;        0x0000 line=27&#xA;      locals        :&#xA;        0x0000 - 0x0008 reg=2 this LTest;&#xA;&#xA;    #1              : (in LTest;)&#xA;      name          : &amp;#39;fade&amp;#39;&#xA;      type          : &amp;#39;()V&amp;#39;&#xA;      access        : 0x0004 (PROTECTED)&#xA;      code          -&#xA;      registers     : 3&#xA;      ins           : 1&#xA;      outs          : 2&#xA;      insns size    : 8 16-bit code units&#xA;00023c:                                        |[00023c] Test.fade:()V&#xA;00024c: 6200 0000                              |0000: sget-object v0, Ljava/lang/System;.out:Ljava/io/PrintStream; // field@0000&#xA;000250: 1a01 1100                              |0002: const-string v1, &amp;#34;fade&amp;#34; // string@0011&#xA;000254: 6e20 0a00 1000                         |0004: invoke-virtual {v0, v1}, Ljava/io/PrintStream;.println:(Ljava/lang/String;)V // method@000a&#xA;00025a: 0e00                                   |0007: return-void&#xA;      catches       : (none)&#xA;      positions     :&#xA;        0x0000 line=23&#xA;      locals        :&#xA;        0x0000 - 0x0008 reg=2 this LTest;&#xA;&#xA;    #2              : (in LTest;)&#xA;      name          : &amp;#39;main&amp;#39;&#xA;      type          : &amp;#39;()V&amp;#39;&#xA;      access        : 0x0001 (PUBLIC)&#xA;      code          -&#xA;      registers     : 4&#xA;      ins           : 1&#xA;      outs          : 4&#xA;      insns size    : 32 16-bit code units&#xA;00029c:                                        |[00029c] Test.main:()V&#xA;0002ac: 1210                                   |0000: const/4 v0, #int 1 // #1&#xA;0002ae: 1901 2440                              |0001: const-wide/high16 v1, #long 4621819117588971520 // #4024&#xA;0002b2: 6e40 0700 0321                         |0003: invoke-virtual {v3, v0, v1, v2}, LTest;.show:(ID)Ljava/lang/String; // method@0007&#xA;0002b8: 2300 0800                              |0006: new-array v0, v0, [Ljava/lang/String; // type@0008&#xA;0002bc: 1201                                   |0008: const/4 v1, #int 0 // #0&#xA;0002be: 1a02 0000                              |0009: const-string v2, &amp;#34;&amp;#34; // string@0000&#xA;0002c2: 4d02 0001                              |000b: aput-object v2, v0, v1&#xA;0002c6: 6e20 0800 0300                         |000d: invoke-virtual {v3, v0}, LTest;.toggle:([Ljava/lang/String;)V // method@0008&#xA;0002cc: 6e10 0300 0300                         |0010: invoke-virtual {v3}, LTest;.fade:()V // method@0003&#xA;0002d2: 6e10 0200 0300                         |0013: invoke-virtual {v3}, LTest;.drag:()V // method@0002&#xA;0002d8: 7010 0400 0300                         |0016: invoke-direct {v3}, LTest;.hide:()V // method@0004&#xA;0002de: 7100 0100 0000                         |0019: invoke-static {}, LTest;.click:()V // method@0001&#xA;0002e4: 7100 0500 0000                         |001c: invoke-static {}, LTest;.hover:()V // method@0005&#xA;0002ea: 0e00                                   |001f: return-void&#xA;      catches       : (none)&#xA;      positions     :&#xA;        0x0003 line=3&#xA;        0x0006 line=4&#xA;        0x000d line=5&#xA;        0x0010 line=6&#xA;        0x0013 line=7&#xA;        0x0016 line=8&#xA;        0x0019 line=9&#xA;        0x001c line=10&#xA;      locals        :&#xA;        0x0000 - 0x0020 reg=3 this LTest;&#xA;&#xA;    #3              : (in LTest;)&#xA;      name          : &amp;#39;show&amp;#39;&#xA;      type          : &amp;#39;(ID)Ljava/lang/String;&amp;#39;&#xA;      access        : 0x0001 (PUBLIC)&#xA;      code          -&#xA;      registers     : 4&#xA;      ins           : 4&#xA;      outs          : 2&#xA;      insns size    : 8 16-bit code units&#xA;0001c4:                                        |[0001c4] Test.show:(ID)Ljava/lang/String;&#xA;0001d4: 6202 0000                              |0000: sget-object v2, Ljava/lang/System;.out:Ljava/io/PrintStream; // field@0000&#xA;0001d8: 6e20 0900 1200                         |0002: invoke-virtual {v2, v1}, Ljava/io/PrintStream;.println:(I)V // method@0009&#xA;0001de: 1a01 1800                              |0005: const-string v1, &amp;#34;showed&amp;#34; // string@0018&#xA;0001e2: 1101                                   |0007: return-object v1&#xA;      catches       : (none)&#xA;      positions     :&#xA;        0x0000 line=14&#xA;      locals        :&#xA;        0x0000 - 0x0008 reg=0 this LTest;&#xA;&#xA;    #4              : (in LTest;)&#xA;      name          : &amp;#39;toggle&amp;#39;&#xA;      type          : &amp;#39;([Ljava/lang/String;)V&amp;#39;&#xA;      access        : 0x0000 ()&#xA;      code          -&#xA;      registers     : 3&#xA;      ins           : 2&#xA;      outs          : 2&#xA;      insns size    : 8 16-bit code units&#xA;0002ec:                                        |[0002ec] Test.toggle:([Ljava/lang/String;)V&#xA;0002fc: 6202 0000                              |0000: sget-object v2, Ljava/lang/System;.out:Ljava/io/PrintStream; // field@0000&#xA;000300: 1a00 1900                              |0002: const-string v0, &amp;#34;toggle&amp;#34; // string@0019&#xA;000304: 6e20 0a00 0200                         |0004: invoke-virtual {v2, v0}, Ljava/io/PrintStream;.println:(Ljava/lang/String;)V // method@000a&#xA;00030a: 0e00                                   |0007: return-void&#xA;      catches       : (none)&#xA;      positions     :&#xA;        0x0000 line=19&#xA;      locals        :&#xA;        0x0000 - 0x0008 reg=1 this LTest;&#xA;&#xA;  source_file_idx   : 10 (Test.java)&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;finalメソッドのdragがvirtualなのがなぜなのかわからない&#xA;&lt;ul&gt;&#xA;&lt;li&gt;finalはdirectメソッドなのでは?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
  </channel>
</rss>
