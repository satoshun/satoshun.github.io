<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Groupie on stsnブログ</title>
    <link>https://satoshun.github.io/tags/groupie/</link>
    <description>Recent content in Groupie on stsnブログ</description>
    <generator>Hugo</generator>
    <language>ja</language>
    <copyright>Sato Shun</copyright>
    <lastBuildDate>Thu, 21 Nov 2019 12:35:25 +0000</lastBuildDate>
    <atom:link href="https://satoshun.github.io/tags/groupie/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Android: Groupieの内部でやっている差分更新周りの話</title>
      <link>https://satoshun.github.io/2019/11/groupie-diffutil/</link>
      <pubDate>Thu, 21 Nov 2019 12:35:25 +0000</pubDate>
      <guid>https://satoshun.github.io/2019/11/groupie-diffutil/</guid>
      <description>&lt;p&gt;Groupieには&lt;code&gt;GroupAdapter#update&lt;/code&gt;メソッドという便利なメソッドがあります。&lt;/p&gt;&#xA;&lt;p&gt;この記事では&lt;code&gt;update&lt;/code&gt;メソッドをコールした時に、どのように差分更新されるかを、簡単な説明と実際に動かしてみて見ていきます。&lt;/p&gt;&#xA;&lt;h2 id=&#34;そもそもrecyclerviewの差分更新って何よ&#34;&gt;そもそもRecyclerViewの差分更新って何よ&lt;/h2&gt;&#xA;&lt;p&gt;RecyclerViewでは、DiffUtil.Callbackクラスを実装することで、前のAdapterの状態と、新しいAdapterの状態の差分を計算することが出来ます。その計算結果をもとに、RecyclerViewでは効率的にViewを更新してくれます。またいい感じにアニメーションを実行してくれます。&lt;/p&gt;&#xA;&lt;p&gt;Groupieでは、内部で&lt;code&gt;DiffUtil.Callback&lt;/code&gt;を実装した&lt;code&gt;DiffCallback&lt;/code&gt;クラスがあり、そのクラスをもとに差分更新が行われます。&lt;/p&gt;&#xA;&lt;h2 id=&#34;diffcallbackクラスの実装を見ていく&#34;&gt;DiffCallbackクラスの実装を見ていく&lt;/h2&gt;&#xA;&lt;p&gt;まずは&lt;code&gt;areItemsTheSame&lt;/code&gt;メソッドから。&lt;code&gt;areItemsTheSame&lt;/code&gt;メソッドは、Itemが同一かどうかを判定します。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@Override&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;boolean&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;areItemsTheSame&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; oldItemPosition, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; newItemPosition) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Item oldItem &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; GroupUtils.&lt;span style=&#34;color:#a6e22e&#34;&gt;getItem&lt;/span&gt;(oldGroups, oldItemPosition);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Item newItem &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; GroupUtils.&lt;span style=&#34;color:#a6e22e&#34;&gt;getItem&lt;/span&gt;(newGroups, newItemPosition);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; newItem.&lt;span style=&#34;color:#a6e22e&#34;&gt;isSameAs&lt;/span&gt;(oldItem);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pr</description>
    </item>
  </channel>
</rss>
