<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>groupie on stsnブログ</title>
    <link>https://satoshun.github.io/tags/groupie/</link>
    <description>Recent content in groupie on stsnブログ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>Sato Shun</copyright>
    <lastBuildDate>Thu, 21 Nov 2019 12:35:25 +0000</lastBuildDate><atom:link href="https://satoshun.github.io/tags/groupie/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Android: Groupieの内部でやっている差分更新周りの話</title>
      <link>https://satoshun.github.io/2019/11/groupie-diffutil/</link>
      <pubDate>Thu, 21 Nov 2019 12:35:25 +0000</pubDate>
      
      <guid>https://satoshun.github.io/2019/11/groupie-diffutil/</guid>
      <description>GroupieにはGroupAdapter#updateメソッドという便利なメソッドがあります。
この記事ではupdateメソッドをコールした時に、どのように差分更新されるかを、簡単な説明と実際に動かしてみて見ていきます。
そもそもRecyclerViewの差分更新って何よ RecyclerViewでは、DiffUtil.Callbackクラスを実装することで、前のAdapterの状態と、新しいAdapterの状態の差分を計算することが出来ます。その計算結果をもとに、RecyclerViewでは効率的にViewを更新してくれます。またいい感じにアニメーションを実行してくれます。
Groupieでは、内部でDiffUtil.Callbackを実装したDiffCallbackクラスがあり、そのクラスをもとに差分更新が行われます。
DiffCallbackクラスの実装を見ていく まずはareItemsTheSameメソッドから。areItemsTheSameメソッドは、Itemが同一かどうかを判定します。
@Override public boolean areItemsTheSame(int oldItemPosition, int newItemPosition) {  Item oldItem = GroupUtils.getItem(oldGroups, oldItemPosition);  Item newItem = GroupUtils.getItem(newGroups, newItemPosition);  return newItem.isSameAs(oldItem); } まず、1つ前のItemと新しいItemを取ってきて、newItem.isSameAs(oldItem);をコールしています。
isSameAsメソッドは次の定義になっています。
public boolean isSameAs(Item other) {  if (getViewType() != other.getViewType()) {  return false;  }  return getId() == other.getId(); } ItemのviewTypeが等しい かつ Idが等しい場合にtrueを返します。
Idは、Itemクラスのコンストラクタから与えることが出来ます。
protected Item(long id) {  this.id = id; } なので、GroupAdapterがupdateされる可能性があるなら、適切なIdを渡すのが良いです。 例えば、Userクラス的なものがあって、運良くUserを一意に判定できるidが定義されていたら、それを渡すと良いと思います。</description>
    </item>
    
  </channel>
</rss>
